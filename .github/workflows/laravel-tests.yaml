name: Run Laravel Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      SESSION_DRIVER: array
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync

    services:
      mysql:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, intl, bcmath, pdo_mysql
          ini-values: post_max_size=256M, upload_max_filesize=256M, memory_limit=2G
          coverage: none

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --no-interaction

      - name: Setup .env and .env.testing
        run: |
          cp .env.example .env
          cp .env.example .env.testing
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=mysql/' .env .env.testing
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env .env.testing
          sed -i 's/DB_PORT=.*/DB_PORT=3306/' .env .env.testing
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=testing/' .env .env.testing
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env .env.testing
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env .env.testing
          sed -i 's/CACHE_DRIVER=.*/CACHE_DRIVER=array/' .env.testing
          sed -i 's/SESSION_DRIVER=.*/SESSION_DRIVER=array/' .env.testing


      - name: Wait for MariaDB
        run: |
          echo "Waiting for MariaDB to be ready..."
          for i in {1..10}; do
            nc -z 127.0.0.1 3306 && echo "MariaDB is up!" && break
            echo "Waiting..."
            sleep 5
          done

      - name: Generate app key (normal)
        run: php artisan key:generate

      - name: Generate app key for testing
        run: php artisan key:generate --env=testing

      - name: Clear and cache config
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan config:cache

      - name: Run migrations
        run: php artisan migrate --env=testing --force

      - name: Run tests
        run: php artisan test --env=testing --testdox
